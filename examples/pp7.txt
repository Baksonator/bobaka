counter <<= 0;

<-->

plus1 :: Num -> Num
plus1 x = ?
	return x + 1;
?

hashtagAsterisk :: String -> Num
hashtagAsterisk input = ?
	check counter != `len` {input} - 1 loop if `isDigit` {input[counter]} fi then 
																						if `isChar` {input[counter + 1]} fi then 
																																	`putStr` {input[counter] + '#'}; 
																															neht else 
																																`putStr` {input[counter]}; 
																															esle 
																					neht else 
																								if `isChar` {input[counter]} fi then 
																																		if `isDigit` {input[counter + 1]} fi then 
																																													`putStr` {input[counter] + '*'}; 
																																												neht else 
																																													`putStr` {input[counter]}; 
																																												esle 
																																	neht else `putStr` {input[counter]}; esle esle pool do counter = `plus1` {counter};
	`putStr` {input[counter]};
?

main :: Num
main = ?
	`hashtagAsterisk` {`input` {}}
?
