z <<= 0;

<-->

isNula :: Num -> Bool
isNula n = ?
	return n == 0;
?

deljenje10 :: Num -> Num
deljenje10 n = ?
	return n // 10;
?

saberiMod10 :: Num -> Num -> Num
saberiMod10 x y = ?
	return x + y % 10;
?

veceOdDeset :: Num -> Bool
veceOdDeset n = ?
	if n > 10 fi then `print` {'Vece'}; neht else `print` {'Manje'}; esle
?

proveri :: Num -> Bool
proveri n = ?
	check !`isNula` {n} loop z = `saberiMod10` {z, n}; pool do n = `deljenje10` {n};
	`veceOdDeset` {z};
?

main :: Num
main = ?
	`proveri` {`inputint` {}}
?
