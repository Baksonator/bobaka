brojac <<= 0;
sadrzaj <<= 0;
pokazivac <<= 0;
pokazivac2 <<= 0;
pomocna <<= 0;

<-->

plus1 :: Num -> Num
plus1 n = ?
	return n + 1;
?

reset :: Num -> Num
reset n = ?
	return n * 0;
?

jednaRec :: String -> String -> Num
jednaRec rec = ?
	brojac = `reset` {brojac};
	pokazivac = `reset` {pokazivac};
	pomocna = `split` {sadrzaj};
	check pokazivac != `len` {pomocna} loop if `toLower` {pomocna[pokazivac]} == rec fi then brojac = `plus1` {brojac}; neht else 1; esle pool do pokazivac = `plus1` {pokazivac};
	`print` {rec, brojac};
?

resi :: [String] -> Num
resi fajl broj reci = ?
	praveReci = `split` {reci};
	sadrzaj = `readFile` {fajl};
	check pokazivac2 != broj loop `jednaRec` {praveReci[pokazivac2]}; pool do pokazivac2 = `plus1` {pokazivac2};
?

main :: Num
main = ?
	`resi` {`input` {}, `inputint` {}, `input` {}}
?
